server.port=8088
spring.application.name=spring-cloud-gateway
#开启失败重试
spring.cloud.loadbalancer.retry.enabled=true
#设置路由id
spring.cloud.gateway.routes[0].id=spring-cloud-service
#目标服务器地址,设置路由的uri,lb代表从注册中心获取服务
spring.cloud.gateway.routes[0].uri=lb://ribbon-service
#设置路由断言,代理serviceId为ribbon-service的/api/路径
#最终达到的目标是当输入http://localhost:8088/api/** 时，请求信息将会被路由到http://ribbon-service/api/**
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/**
# 开启SpringCloud Gateway的注册中心发现配置
# 开启后可自动从服务注册中心拉取服务列表，通过各个服务的spring.application.name作为前缀进行转发
# 当访问http://网关地址/服务名称（大写）/**地址
# 会自动转发到http://服务名称（大写）/**地址
# 如果为false就不会自动转发
# 该配置默认为false
spring.cloud.gateway.discovery.locator.enabled=true
#为true表示服务名称（小写）
spring.cloud.gateway.discovery.locator.lower-case-service-id=true
eureka.instance.prefer-ip-address=true
#注册API-Gateway网关服务到Eureka注册中心
eureka.client.serviceUrl.defaultZone=http://localhost:8081/eureka/
#客户端是否要从eureka server获取注册信息，默认为true
eureka.client.fetchRegistry=true
# 配置Gateway日志等级，输出转发细节信息
logging.level.org.springframework.cloud.gateway=debug
logging.level.org.springframework.http.server.reactive=debug
logging.level.org.springframework.web.reactive=debug
logging.level.reactor.ipc.netty=debug